---
    name: trivy
    on:
      workflow_call:
        inputs:
          working_directory:
            description: 'Directory where main.tf exist of the module.'
            required: false
            type: string
            default: './'
        secrets:
          TOKEN:
            required: true
            description: 'PAT of the user to run the jobs.'
    jobs:
      trivy:
        name: trivy sarif report
        runs-on: ubuntu-latest
        steps:
          - name: Clone repo
            uses: actions/checkout@master
    
          - name: Run Trivy vulnerability scanner in IaC mode
            id: trivy-scan
            uses: aquasecurity/trivy-action@master
            with:
              scan-type: 'config'
              scan-ref: ${{ inputs.working_directory }}
              hide-progress: false
              format: 'sarif'
              output: 'trivy-results.sarif'
              exit-code: '1'
              severity: 'CRITICAL,HIGH'
            continue-on-error: true

    
          - name: Upload Trivy scan results to GitHub Security tab
            uses: github/codeql-action/upload-sarif@v3
            with:
              sarif_file: 'trivy-results.sarif'
            continue-on-error: true

          - name: Check if vulnerabilities were found
            id: check-vuln
            run: |
              if [ "${{ steps.trivy-scan.outcome }}" == "failure" ]; then
                echo "vulnerabilities_found=true" >> $GITHUB_OUTPUT
              else
                echo "vulnerabilities_found=false" >> $GITHUB_OUTPUT
              fi

          - name: PR commenter
            uses: tfsec/tfsec-pr-commenter-action@v1.3.1
            with:
              github_token: ${{ secrets.TOKEN }}
              working_directory: ${{ inputs.working_directory}}
    
          # - name: Get Trivy scan logs
          #   if: steps.check-vuln.outputs.vulnerabilities_found == 'true'
          #   id: get-logs
          #   run: |
          #     echo "TRIVY_OUTPUT<<EOF" >> $GITHUB_ENV
          #     cat trivy-results.sarif | jq -r '.runs[0].results[] | "- " + .ruleId + ": " + .message.text' >> $GITHUB_ENV
          #     echo "EOF" >> $GITHUB_ENV
    
          # - name: Comment on PR with vulnerabilities
          #   if: steps.check-vuln.outputs.vulnerabilities_found == 'true' && github.event_name == 'pull_request'
          #   uses: actions/github-script@v6
          #   with:
          #     github-token: ${{ secrets.TOKEN }}
          #     script: |
          #       const issueNumber = context.issue.number;
          #       const owner = context.repo.owner;
          #       const repo = context.repo.repo;
                
          #       const body = `## ‚ùå Trivy Security Scan Failed
                
          #       The following security vulnerabilities were found in your Terraform code:
                
          #       ${{ env.TRIVY_OUTPUT }}
                
          #       Please address these issues before merging this pull request.`;
                
          #       await github.rest.issues.createComment({
          #         owner,
          #         repo,
          #         issue_number: issueNumber,
          #         body
          #       });

         
#####---------------------------------------------------------------------######
#########  Without Enabling Advance Security Features  #########
#####---------------------------------------------------------------------######
         
          # - name: Run Trivy scanner
          #   uses: aquasecurity/trivy-action@0.28.0
          #   with:
          #     scan-type: config
          #     hide-progress: true
          #     output: trivy.txt

          # - name: Publish Trivy Output to Summary
          #   run: |
          #     if [[ -s trivy.txt ]]; then
          #       {
          #         echo "### Security Output"
          #         echo "<details><summary>Click to expand</summary>"
          #         echo ""
          #         echo '```terraform'
          #         cat trivy.txt
          #         echo '```'
          #         echo "</details>"
          #       } >> $GITHUB_STEP_SUMMARY
          #     fi
